    selectProvider(providerType) {
        // Update selected state
        document.querySelectorAll('.provider-btn').forEach(btn => {
            btn.classList.toggle('selected', btn.dataset.provider === providerType);
        });

        // Provider instructions
        const instructions = {
            openai: {
                title: 'üöÄ OpenAI API',
                steps: [
                    '1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ <a href="https://platform.openai.com/api-keys" target="_blank">platform.openai.com/api-keys</a>',
                    '2. –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å',
                    '3. –ù–∞–∂–º–∏—Ç–µ "Create new secret key"',
                    '4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å sk-...)',
                    '‚ö†Ô∏è <strong>–í–∞–∂–Ω–æ:</strong> –ù—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å ($5-10) –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API'
                ],
                placeholder: 'sk-...'
            },
            anthropic: {
                title: 'üß† Anthropic Claude API',
                steps: [
                    '1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ <a href="https://console.anthropic.com/" target="_blank">console.anthropic.com</a>',
                    '2. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ',
                    '3. –í —Ä–∞–∑–¥–µ–ª–µ "API Keys" –Ω–∞–∂–º–∏—Ç–µ "Create Key"',
                    '4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å sk-ant-...)',
                    'üéÅ <strong>–ë–æ–Ω—É—Å:</strong> $5 –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!'
                ],
                placeholder: 'sk-ant-...'
            },
            google: {
                title: 'üåü Google Gemini API',
                steps: [
                    '1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ <a href="https://aistudio.google.com/app/apikey" target="_blank">aistudio.google.com/app/apikey</a>',
                    '2. –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Google –∞–∫–∫–∞—É–Ω—Ç',
                    '3. –ù–∞–∂–º–∏—Ç–µ "Create API Key"',
                    '4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á',
                    '‚úÖ <strong>–ü–ª—é—Å:</strong> –©–µ–¥—Ä—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª–∏–º–∏—Ç!'
                ],
                placeholder: 'AI...'
            },
            ollama: {
                title: 'üè† Ollama (–õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏)',
                steps: [
                    '1. –°–∫–∞—á–∞–π—Ç–µ —Å <a href="https://ollama.ai/" target="_blank">ollama.ai</a>',
                    '2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: <code>ollama serve</code>',
                    '3. –°–∫–∞—á–∞–π—Ç–µ –º–æ–¥–µ–ª—å: <code>ollama pull llama3.2</code>',
                    '4. API –∫–ª—é—á –Ω–µ –Ω—É–∂–µ–Ω - –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ!',
                    'üîí <strong>–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å:</strong> –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–∫–∏–¥–∞—é—Ç –≤–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä'
                ],
                placeholder: '–ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è'
            }
        };

        const instruction = instructions[providerType];
        
        // Show API key section for non-local providers
        if (providerType === 'ollama') {
            // Show instructions but skip API key input
            this.showProviderInstructions(instruction);
            this.initializeProvider(providerType, 'local');
            document.getElementById('api-section').style.display = 'none';
            document.getElementById('level-section').style.display = 'block';
        } else {
            // Show instructions and API key input
            this.showProviderInstructions(instruction);
            document.getElementById('api-section').style.display = 'block';
            
            // Update API key placeholder
            const apiInput = document.getElementById('api-key');
            apiInput.placeholder = instruction.placeholder;
        }

        this.selectedProviderType = providerType;
        localStorage.setItem('irony-trainer-provider', providerType);
    }

    showProviderInstructions(instruction) {
        // Find or create instructions container
        let instructionsContainer = document.getElementById('provider-instructions');
        if (!instructionsContainer) {
            instructionsContainer = document.createElement('div');
            instructionsContainer.id = 'provider-instructions';
            instructionsContainer.className = 'provider-instructions';
            
            // Insert after provider selection
            const providerSection = document.getElementById('provider-section');
            providerSection.appendChild(instructionsContainer);
        }

        instructionsContainer.innerHTML = `
            <div class="instruction-card">
                <h3>${instruction.title}</h3>
                <div class="instruction-steps">
                    ${instruction.steps.map(step => `<p>${step}</p>`).join('')}
                </div>
            </div>
        `;

        instructionsContainer.style.display = 'block';
    }